{"mappings":"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","sources":["src/js/rock-paper-scissors.js","src/js/google__dinosaur.js","src/js/data/games.js","src/js/main-content.js"],"sourcesContent":["class rockPaperScissors {\n  constructor() {\n    this.robotScore = 0;\n    this.userScore = 0;\n    this.game = document.querySelector('.rock-paper-scissors');\n    this.gameContainer = document.querySelector(\n      '.rock-paper-scissors__container'\n    );\n    this.buttons = [\n      { name: 'rock', class: 'rock' },\n      { name: 'scissors', class: 'scissors' },\n      { name: 'paper', class: 'paper' },\n    ];\n    this.init();\n  }\n\n  init() {\n    this.renderButtons();\n    this.addEventListeners();\n    this.renderScore();\n    this.renderResult();\n  }\n\n  renderButtons() {\n    // Тайтл секції\n    const gameTitle = document.createElement('h2');\n    gameTitle.classList.add('rock-paper-scissors__title');\n    gameTitle.classList.add('title');\n    gameTitle.textContent = 'Камінь - ножиці - папір';\n    this.gameContainer.prepend(gameTitle);\n\n    // Контейнер\n    const gameButtons = document.createElement('div');\n    gameButtons.classList.add('rock-paper-scissors__buttons');\n    this.game.append(gameButtons);\n\n    // Кнопки\n    gameButtons.innerHTML = this.buttons\n      .map(\n        button =>\n          `<button type='button' class='button rock-paper-scissors__button--${button.class} rock-paper-scissors__button' data-name = '${button.name}'></button>`\n      )\n      .join('');\n  }\n\n  addEventListeners() {\n    const buttons = this.game.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', event => {\n        this.buttonsScoreHandler(event);\n      });\n    });\n  }\n\n  buttonsScoreHandler(event) {\n    const userChoice = event.target.dataset.name;\n    const robotChoice = this.robotPick();\n    const result = this.getResult(userChoice, robotChoice);\n\n    const resultText = document.querySelector('.result__text');\n    const robotWinMessage = 'Комп’ютер виграв раунд!';\n    const userWinMessage = 'Ви виграли раунд!';\n    const drawMessage = 'Нічия!';\n\n    if (result === 'user') {\n      resultText.innerHTML = userWinMessage;\n      resultText.style.color = '#039900'; // зелений\n      this.userScore += 1;\n    }\n    if (result === 'robot') {\n      resultText.innerHTML = robotWinMessage;\n      resultText.style.color = '#990000'; // червоний\n      this.robotScore += 1;\n    }\n    if (result === 'draw') {\n      resultText.innerHTML = drawMessage;\n      resultText.style.color = '#039900'; // зелений\n      this.robotScore += 1;\n      this.userScore += 1;\n    }\n\n    const resultButton = document.querySelector('.result__button');\n    resultButton.innerHTML = `Варіант комп'ютера: ${robotChoice}`;\n    this.renderScore();\n  }\n\n  robotPick() {\n    const choices = this.buttons.map(button => button.name);\n    const randomIndex = Math.floor(Math.random() * choices.length);\n    return choices[randomIndex];\n  }\n\n  getResult(userChoice, robotChoice) {\n    if (\n      (userChoice === 'scissors' && robotChoice === 'paper') ||\n      (userChoice === 'paper' && robotChoice === 'rock') ||\n      (userChoice === 'rock' && robotChoice === 'scissors')\n    ) {\n      return 'user';\n    } else if (userChoice === robotChoice) {\n      return 'draw';\n    } else {\n      return 'robot';\n    }\n  }\n\n  renderScore(event) {\n    let scoreContainer = this.game.querySelector('.score__container');\n\n    if (!scoreContainer) {\n      scoreContainer = document.createElement('div');\n      scoreContainer.classList.add('score__container');\n      this.game.append(scoreContainer);\n    }\n    // Container\n\n    // content\n    scoreContainer.innerHTML = `\n    <h2 class=\"result__title\">Рахунок:</h2>\n    <p class=\"robot__output\">Комп’ютер - ${this.robotScore}</p>\n    <p class=\"user__output\">Ви - ${this.userScore}</p>\n  `;\n  }\n\n  renderResult() {\n    const resultContainer = document.createElement('div');\n    resultContainer.classList.add('result__container');\n    this.gameContainer.appendChild(resultContainer);\n\n    const resultText = document.createElement('p');\n    resultText.classList.add('result__text');\n    resultText.innerHTML = 'Щоб почати гру натисніть на будь який варіант!';\n\n    const resultButton = document.createElement('p');\n    resultButton.type = 'button';\n    resultButton.classList.add('result__button');\n    resultButton.innerHTML = \"Варіант комп'ютера\";\n\n    resultContainer.append(resultText, resultButton);\n  }\n}\n\nexport const rockPaperScissorsInit = () => {\n  new rockPaperScissors();\n};\n","class GoogleDinosaur {\n  constructor() {\n    document.querySelector(\n      '.google-dinosaur'\n    ).innerHTML = `<div class=\"game__container--dino\">\n        <div class=\"dino\"></div>\n        </div>\n        `;\n    this.dino = document.querySelector('.dino');\n    this.gameArea = document.querySelector('.game__container--dino');\n    this.gameOver = false;\n    this.isJumping = false;\n    this.init();\n  }\n\n  init() {\n    document.addEventListener('keydown', event => {\n      if (event.code === 'Space' && !this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    document.addEventListener('mousedown', event => {\n      if (!this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    this.renderObstacles();\n    this.checkCollision();\n  }\n\n  jump() {\n    this.isJumping = true;\n    this.dino.classList.add('jump');\n\n    setTimeout(() => {\n      this.isJumping = false;\n      this.dino.classList.remove('jump');\n    }, 500);\n  }\n\n  checkCollision() {\n    const gameProcess = () => {\n      if (this.gameOver === true) return;\n      const obstacle = this.gameArea.querySelector('.cactus');\n      const obstacleRect = obstacle.getBoundingClientRect();\n      const dinoRect = this.dino.getBoundingClientRect();\n      if (\n        dinoRect.right > obstacleRect.left &&\n        dinoRect.left < obstacleRect.right &&\n        dinoRect.bottom > obstacleRect.top\n      ) {\n        this.endGame(obstacle);\n        return;\n      }\n\n      requestAnimationFrame(gameProcess);\n    };\n    requestAnimationFrame(gameProcess);\n  }\n\n  renderObstacles() {\n    const obstacle = document.createElement('div');\n    obstacle.classList.add('cactus');\n    obstacle.style.height = this.randomHeight();\n    this.gameArea.appendChild(obstacle);\n\n    const animationHandler = () => {\n      obstacle.removeEventListener('animationiteration', animationHandler);\n      this.gameArea.removeChild(obstacle);\n      if (!this.gameOver) {\n        this.renderObstacles();\n      }\n    };\n    obstacle.addEventListener('animationiteration', animationHandler);\n  }\n\n  randomHeight() {\n    return `${Math.random() * (70 - 40) + 40}px`;\n  }\n\n  endGame(obstacle) {\n    obstacle.style.animationPlayState = 'paused';\n    this.gameOver = true;\n    this.gameOverModal();\n  }\n\n  gameOverModal() {\n    const modalHtml = `\n    <div class=\"dinosaur__modal\">\n      <p class=\"dinosaur__lose\">Ви програли!</p>\n      <button class=\"dinosaur__restart button\">Спробувати знову</button>\n    </div>\n    `;\n    this.gameArea.insertAdjacentHTML('beforeend', modalHtml);\n\n    const modal = this.gameArea.querySelector('.dinosaur__modal');\n    setTimeout(() => {\n      modal.classList.add('show');\n    }, 10);\n\n    const retryButton = this.gameArea.querySelector('.dinosaur__restart');\n    retryButton.addEventListener('click', () => this.restartGame());\n  }\n\n  restartGame() {\n    this.gameArea.querySelector('.dinosaur__modal').remove();\n    this.gameArea.querySelector('.cactus').remove();\n    this.gameOver = false;\n    this.renderObstacles();\n    this.checkCollision();\n  }\n}\n\nexport const dinosaurInit = () => {\n  new GoogleDinosaur();\n};\n","import { rockPaperScissorsInit } from '../rock-paper-scissors.js';\nimport { dinosaurInit } from '../google__dinosaur.js';\n\nexport default [\n  {\n    id: 1,\n    name: 'Високосний калькулятор',\n    category: ['numerical', 'all'],\n    class: 'calculator-year',\n  },\n  {\n    id: 2,\n    name: 'Вгадай число',\n    category: ['numerical', 'all'],\n    class: 'guess-number',\n  },\n  {\n    id: 3,\n    name: 'Камінь-Ножиці-Папір',\n    category: ['game', 'all'],\n    class: 'rock-paper-scissors',\n    init: rockPaperScissorsInit,\n  },\n  {\n    id: 4,\n    name: 'Калькулятор',\n    category: ['numerical', 'all'],\n    class: 'calculator',\n  },\n  {\n    id: 5,\n    name: 'Калькулятор часу',\n    category: ['numerical', 'all'],\n    class: 'time-calculator',\n  },\n  {\n    id: 6,\n    name: 'Google динозаврик',\n    category: ['game', 'all'],\n    class: 'google-dinosaur',\n    init: dinosaurInit,\n  },\n  {\n    id: 7,\n    name: 'Футбол',\n    category: ['game', 'all'],\n    class: 'soccer',\n  },\n  {\n    id: 8,\n    name: 'Найбільше число',\n    category: ['numerical', 'all'],\n    class: 'biggest-number',\n  },\n  {\n    id: 9,\n    name: 'Наша команда',\n    category: ['acquaintance', 'all'],\n    class: 'our-team',\n  },\n  {\n    id: 10,\n    name: 'Вчений',\n    category: ['acquaintance', 'all'],\n    class: 'scientist',\n  },\n];\n","import games from './data/games';\n\nconst renderGames = (games, category) => {\n  const main = document.querySelector('#main');\n\n  const filteredGames = games.filter(\n    game => category === 'all' || game.category.includes(category)\n  );\n\n  main.innerHTML = filteredGames\n    .map(\n      game =>\n        `<section class='section'>\n    <div class=\"container ${game.class}__container game__container\">\n      <div class=\"game ${game.class}\"></div>\n    </div>\n  </section>`\n    )\n    .join('');\n\n  filteredGames.forEach(element => {\n    if (element.init) {\n      element.init();\n    }\n  });\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderGames(games, 'all');\n});\n\nconst submenu = document.querySelector('.submenu');\n\nconst submenuHandler = event => {\n  switch (event.target.dataset.category) {\n    case 'numerical':\n      renderGames(games, 'numerical');\n      break;\n    case 'games':\n      renderGames(games, 'game');\n      break;\n    case 'acquaintance':\n      renderGames(games, 'acquaintance');\n      break;\n\n    default:\n      break;\n  }\n};\n\nsubmenu.addEventListener('click', submenuHandler);\n"],"names":["$5d731ca2787320c6$var$rockPaperScissors","init","this","renderButtons","addEventListeners","renderScore","renderResult","gameTitle","document","createElement","classList","add","textContent","gameContainer","prepend","gameButtons","game","append","innerHTML","buttons","map","button","class","name","join","querySelectorAll","forEach","addEventListener","event","buttonsScoreHandler","userChoice","target","dataset","robotChoice","robotPick","result","getResult","resultText","querySelector","style","color","userScore","robotScore","choices","Math","floor","random","length","scoreContainer","resultContainer","appendChild","resultButton","type","constructor","$2807a092594a29df$var$GoogleDinosaur","code","isJumping","gameOver","jump","renderObstacles","checkCollision","dino","setTimeout","remove","gameProcess","obstacle","gameArea","obstacleRect","getBoundingClientRect","dinoRect","right","left","bottom","top","endGame","requestAnimationFrame","height","randomHeight","animationHandler","removeEventListener","removeChild","animationPlayState","gameOverModal","insertAdjacentHTML","modal","restartGame","$6681cdfd3416e539$export$2e2bcd8739ae039","id","category","$10cdac669b6c4a5a$var$renderGames","games1","main","filteredGames","filter","includes","element"],"version":3,"file":"index.89ae681d.js.map"}