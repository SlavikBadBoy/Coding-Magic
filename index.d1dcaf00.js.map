{"mappings":"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","sources":["src/js/rock-paper-scissors.js","src/js/google__dinosaur.js","src/js/data/games.js","src/js/leap-year.js","src/js/numerical.js","src/js/main-content.js"],"sourcesContent":["class rockPaperScissors {\n  constructor() {\n    this.robotScore = 0;\n    this.userScore = 0;\n    this.game = document.querySelector('.rock-paper-scissors');\n    this.gameContainer = document.querySelector(\n      '.rock-paper-scissors__container'\n    );\n    this.buttons = [\n      { name: 'rock', class: 'rock' },\n      { name: 'scissors', class: 'scissors' },\n      { name: 'paper', class: 'paper' },\n    ];\n    this.init();\n  }\n\n  init() {\n    this.renderButtons();\n    this.addEventListeners();\n    this.renderScore();\n    this.renderResult();\n  }\n\n  renderButtons() {\n    // Тайтл секції\n    const gameTitle = document.createElement('h2');\n    gameTitle.classList.add('rock-paper-scissors__title');\n    gameTitle.classList.add('title');\n    gameTitle.textContent = 'Камінь - ножиці - папір';\n    this.gameContainer.prepend(gameTitle);\n\n    // Контейнер\n    const gameButtons = document.createElement('div');\n    gameButtons.classList.add('rock-paper-scissors__buttons');\n    this.game.append(gameButtons);\n\n    // Кнопки\n    gameButtons.innerHTML = this.buttons\n      .map(\n        button =>\n          `<button type='button' class='button rock-paper-scissors__button--${button.class} rock-paper-scissors__button' data-name = '${button.name}'></button>`\n      )\n      .join('');\n  }\n\n  addEventListeners() {\n    const buttons = this.game.querySelectorAll('.button');\n    buttons.forEach(button => {\n      button.addEventListener('click', event => {\n        this.buttonsScoreHandler(event);\n      });\n    });\n  }\n\n  buttonsScoreHandler(event) {\n    const userChoice = event.target.dataset.name;\n    const robotChoice = this.robotPick();\n    const result = this.getResult(userChoice, robotChoice);\n\n    const resultText = document.querySelector('.result__text');\n    const robotWinMessage = 'Комп’ютер виграв раунд!';\n    const userWinMessage = 'Ви виграли раунд!';\n    const drawMessage = 'Нічия!';\n\n    if (result === 'user') {\n      resultText.innerHTML = userWinMessage;\n      resultText.style.color = '#039900'; // зелений\n      this.userScore += 1;\n    }\n    if (result === 'robot') {\n      resultText.innerHTML = robotWinMessage;\n      resultText.style.color = '#990000'; // червоний\n      this.robotScore += 1;\n    }\n    if (result === 'draw') {\n      resultText.innerHTML = drawMessage;\n      resultText.style.color = '#039900'; // зелений\n      this.robotScore += 1;\n      this.userScore += 1;\n    }\n\n    const resultButton = document.querySelector('.result__button');\n    resultButton.innerHTML = `Варіант комп'ютера: ${robotChoice}`;\n    this.renderScore();\n  }\n\n  robotPick() {\n    const choices = this.buttons.map(button => button.name);\n    const randomIndex = Math.floor(Math.random() * choices.length);\n    return choices[randomIndex];\n  }\n\n  getResult(userChoice, robotChoice) {\n    if (\n      (userChoice === 'scissors' && robotChoice === 'paper') ||\n      (userChoice === 'paper' && robotChoice === 'rock') ||\n      (userChoice === 'rock' && robotChoice === 'scissors')\n    ) {\n      return 'user';\n    } else if (userChoice === robotChoice) {\n      return 'draw';\n    } else {\n      return 'robot';\n    }\n  }\n\n  renderScore(event) {\n    let scoreContainer = this.game.querySelector('.score__container');\n\n    if (!scoreContainer) {\n      scoreContainer = document.createElement('div');\n      scoreContainer.classList.add('score__container');\n      this.game.append(scoreContainer);\n    }\n    // Container\n\n    // content\n    scoreContainer.innerHTML = `\n    <h2 class=\"result__title\">Рахунок:</h2>\n    <p class=\"robot__output\">Комп’ютер - ${this.robotScore}</p>\n    <p class=\"user__output\">Ви - ${this.userScore}</p>\n  `;\n  }\n\n  renderResult() {\n    const resultContainer = document.createElement('div');\n    resultContainer.classList.add('result__container');\n    this.gameContainer.appendChild(resultContainer);\n\n    const resultText = document.createElement('p');\n    resultText.classList.add('result__text');\n    resultText.innerHTML = 'Щоб почати гру натисніть на будь який варіант!';\n\n    const resultButton = document.createElement('p');\n    resultButton.type = 'button';\n    resultButton.classList.add('result__button');\n    resultButton.innerHTML = \"Варіант комп'ютера\";\n\n    resultContainer.append(resultText, resultButton);\n  }\n}\n\nexport const rockPaperScissorsInit = () => {\n  new rockPaperScissors();\n};\n","class GoogleDinosaur {\n  constructor() {\n    document.querySelector(\n      '.google-dinosaur'\n    ).innerHTML = `<div class=\"game__container--dino\">\n        <div class=\"dino\"></div>\n        </div>\n        `;\n    this.dino = document.querySelector('.dino');\n    this.gameArea = document.querySelector('.game__container--dino');\n    this.gameOver = false;\n    this.isJumping = false;\n    this.gameModalStart();\n  }\n\n  gameModalStart() {\n    const modalHtml = `\n    <div class=\"dinosaur__modal show\">\n      <p class=\"dinosaur__lose\">Гугл динозаврик!</p>\n      <button class=\"dinosaur__restart button\">Почати гру!</button>\n    </div>\n    `;\n    this.gameArea.insertAdjacentHTML('beforeend', modalHtml);\n\n    const modal = this.gameArea.querySelector('.dinosaur__modal');\n\n    const retryButton = this.gameArea.querySelector('.dinosaur__restart');\n    retryButton.addEventListener('click', () => {\n      modal.classList.remove('show');\n      setTimeout(() => {\n        modal.remove();\n      }, 250);\n      this.init();\n    });\n  }\n\n  init() {\n    document.addEventListener('keydown', event => {\n      if (event.code === 'Space' && !this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    document.addEventListener('mousedown', event => {\n      if (!this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    this.renderObstacles();\n    this.checkCollision();\n  }\n\n  jump() {\n    this.isJumping = true;\n    this.dino.classList.add('jump');\n\n    setTimeout(() => {\n      this.isJumping = false;\n      this.dino.classList.remove('jump');\n    }, 500);\n  }\n\n  checkCollision() {\n    const gameProcess = () => {\n      if (this.gameOver === true) return;\n      const obstacle = this.gameArea.querySelector('.cactus');\n      const obstacleRect = obstacle.getBoundingClientRect();\n      const dinoRect = this.dino.getBoundingClientRect();\n      if (\n        dinoRect.right > obstacleRect.left &&\n        dinoRect.left < obstacleRect.right &&\n        dinoRect.bottom > obstacleRect.top\n      ) {\n        this.endGame(obstacle);\n        return;\n      }\n\n      requestAnimationFrame(gameProcess);\n    };\n    requestAnimationFrame(gameProcess);\n  }\n\n  renderObstacles() {\n    const obstacle = document.createElement('div');\n    obstacle.classList.add('cactus');\n    obstacle.style.height = this.randomHeight();\n    this.gameArea.appendChild(obstacle);\n\n    const animationHandler = () => {\n      obstacle.removeEventListener('animationiteration', animationHandler);\n      this.gameArea.removeChild(obstacle);\n      if (!this.gameOver) {\n        this.renderObstacles();\n      }\n    };\n    obstacle.addEventListener('animationiteration', animationHandler);\n  }\n\n  randomHeight() {\n    return `${Math.random() * (70 - 40) + 40}px`;\n  }\n\n  endGame(obstacle) {\n    obstacle.style.animationPlayState = 'paused';\n    this.gameOver = true;\n    this.gameOverModal();\n  }\n\n  gameOverModal() {\n    const modalHtml = `\n    <div class=\"dinosaur__modal\">\n      <p class=\"dinosaur__lose\">Ви програли!</p>\n      <button class=\"dinosaur__restart button\">Спробувати знову</button>\n    </div>\n    `;\n    this.gameArea.insertAdjacentHTML('beforeend', modalHtml);\n\n    const modal = this.gameArea.querySelector('.dinosaur__modal');\n    setTimeout(() => {\n      modal.classList.add('show');\n    }, 10);\n\n    const retryButton = this.gameArea.querySelector('.dinosaur__restart');\n    retryButton.addEventListener('click', () => this.restartGame());\n  }\n\n  restartGame() {\n    this.gameArea.querySelector('.dinosaur__modal').remove();\n    this.gameArea.querySelector('.cactus').remove();\n    this.gameOver = false;\n    this.renderObstacles();\n    this.checkCollision();\n  }\n}\n\nexport const dinosaurInit = () => {\n  new GoogleDinosaur();\n};\n","import { rockPaperScissorsInit } from '../rock-paper-scissors.js';\nimport { dinosaurInit } from '../google__dinosaur.js';\nimport { calculatorYearInit } from '../leap-year.js'\nimport { numericalInit } from '../numerical.js';\nexport default [\n  {\n    id: 1,\n    name: 'Високосний калькулятор',\n    category: ['numerical', 'all'],\n    class: 'calculator-year',\n    init: calculatorYearInit,\n  },\n  {\n    id: 2,\n    name: 'Вгадай число',\n    category: ['numerical', 'all'],\n    class: 'guess-number',\n    init: numericalInit,\n  },\n  {\n    id: 3,\n    name: 'Камінь-Ножиці-Папір',\n    category: ['game', 'all'],\n    class: 'rock-paper-scissors',\n    init: rockPaperScissorsInit,\n  },\n  {\n    id: 4,\n    name: 'Калькулятор',\n    category: ['numerical', 'all'],\n    class: 'calculator',\n  },\n  {\n    id: 5,\n    name: 'Калькулятор часу',\n    category: ['numerical', 'all'],\n    class: 'time-calculator',\n  },\n  {\n    id: 6,\n    name: 'Google динозаврик',\n    category: ['game', 'all'],\n    class: 'google-dinosaur',\n    init: dinosaurInit,\n  },\n  {\n    id: 7,\n    name: 'Футбол',\n    category: ['game', 'all'],\n    class: 'soccer',\n  },\n  {\n    id: 8,\n    name: 'Найбільше число',\n    category: ['numerical', 'all'],\n    class: 'biggest-number',\n  },\n  {\n    id: 9,\n    name: 'Наша команда',\n    category: ['acquaintance', 'all'],\n    class: 'our-team',\n  },\n  {\n    id: 10,\n    name: 'Вчений',\n    category: ['acquaintance', 'all'],\n    class: 'scientist',\n  },\n];\n","export const calculatorYearInit = () => {\n  const title = document.querySelector('.calculator-year__container');\n  const createTitle = document.createElement('h2');\n\n  createTitle.classList.add('title__leap-year');\n  createTitle.textContent = 'Перевір в який рік ти народився';\n  title.prepend(createTitle);\n  const leapYear = document.querySelector('.calculator-year');\n  leapYear.innerHTML = `  <form action=\"#\" class=\"form__check-year\">      <input\nclass=\"input__check-year\"\ntype=\"number\"\nid=\"year\"\nplaceholder=\"Введіть рік народження\"\n/>\n<button class=\"button__check-year\" id=\"checkYearButton\"></button>\n</form>\n\n<p class=\"result__check-year\" id=\"result\"></p>\n`;\n  const calculatorYear = document.querySelector('#year');\n  const result = document.querySelector('#result');\n  const button = document.querySelector('#checkYearButton');\n\n  const checkCalculatorYear = (event) => {\n    event.preventDefault(); \n    \n    const yearValue = calculatorYear.value.trim(); \n\n    if (yearValue.length === 0) {\n      result.innerHTML = 'Введіть ваш рік!';\n      result.style.color = 'red';\n    }\n    const year = parseInt(calculatorYear.value);\n    if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\n      result.innerHTML = 'Ви народилися у високосний рік!';\n      result.style.color = `green`;\n    } else {\n      result.innerHTML = 'Ви народилися не в високосний рік.';\n      result.style.color = 'red';\n    }\n\n    \n  };\n  button.addEventListener('click', checkCalculatorYear);\n};\n","export const numericalInit = () => {\n  const title = document.querySelector('.guess-number__container');\n  const createTitle = document.createElement('h2');\n\n  createTitle.classList.add('title__numerical');\n  createTitle.textContent = 'Вгадай число, яке загадав комп’ютер';\n  title.prepend(createTitle);\n  const numerical = document.querySelector('.guess-number');\n  numerical.innerHTML = `<form action=\"#\" class=\"form__numerical\">\n<input\n  class=\"input__numerical\"\n  type=\"number\"\n  id=\"number\"\n  placeholder=\"Введіть число\"\n/>\n<button type='button' class=\"button__numerical\" id=\"checkNumber\"></button>\n</form>\n\n<p class=\"result__numerical\" id=\"result\">Щоб почати гру, напишіть будь яке число від 1 до 10!</p>\n`;\n\n  const number = document.querySelector('#number');\n  const buttonCheckNumber = document.querySelector('#checkNumber');\n  const result = document.querySelector('#result');\n\n  let randomNumber = Math.floor(Math.random() * 10) + 1;\n\n  const checkNumber = () => {\n    const userGuess = parseInt(number.value);\n\n    if (userGuess === randomNumber) {\n      result.innerHTML = `Вітаю, ви вгадали число! ${randomNumber}`;\n      result.style.color = 'green';\n    } else if (userGuess < randomNumber) {\n      result.innerHTML = `Ви не вгадали, чило ${randomNumber}`;\n      result.style.color = 'red';\n    }\n    randomNumber = Math.floor(Math.random() * 10) + 1;\n  };\n  buttonCheckNumber.addEventListener('click', checkNumber);\n};\n","import games from './data/games';\n\nconst renderGames = (games, category) => {\n  const main = document.querySelector('#main');\n\n  const filteredGames = games.filter(\n    game => category === 'all' || game.category.includes(category)\n  );\n\n  main.innerHTML = filteredGames\n    .map(\n      game =>\n        `<section class='section'>\n    <div class=\"container ${game.class}__container game__container\">\n      <div class=\"game ${game.class}\"></div>\n    </div>\n  </section>`\n    )\n    .join('');\n\n  filteredGames.forEach(element => {\n    if (element.init) {\n      element.init();\n    }\n  });\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderGames(games, 'all');\n});\n\nconst submenu = document.querySelector('.submenu');\n\nconst submenuHandler = event => {\n  switch (event.target.dataset.category) {\n    case 'numerical':\n      renderGames(games, 'numerical');\n      break;\n    case 'games':\n      renderGames(games, 'game');\n      break;\n    case 'acquaintance':\n      renderGames(games, 'acquaintance');\n      break;\n\n    default:\n      break;\n  }\n};\n\nsubmenu.addEventListener('click', submenuHandler);\n"],"names":["$5d731ca2787320c6$var$rockPaperScissors","init","this","renderButtons","addEventListeners","renderScore","renderResult","gameTitle","document","createElement","classList","add","textContent","gameContainer","prepend","gameButtons","game","append","innerHTML","buttons","map","button","class","name","join","querySelectorAll","forEach","addEventListener","event","buttonsScoreHandler","userChoice","target","dataset","robotChoice","robotPick","result","getResult","resultText","querySelector","style","color","userScore","robotScore","choices","Math","floor","random","length","scoreContainer","resultContainer","appendChild","resultButton","type","constructor","$2807a092594a29df$var$GoogleDinosaur","gameModalStart","gameArea","insertAdjacentHTML","modal","remove","setTimeout","code","isJumping","gameOver","jump","renderObstacles","checkCollision","dino","gameProcess","obstacle","obstacleRect","getBoundingClientRect","dinoRect","right","left","bottom","top","endGame","requestAnimationFrame","height","randomHeight","animationHandler","removeEventListener","removeChild","animationPlayState","gameOverModal","restartGame","$6681cdfd3416e539$export$2e2bcd8739ae039","id","category","title","createTitle","calculatorYear","preventDefault","value","trim","year","parseInt","number","buttonCheckNumber","randomNumber","userGuess","$10cdac669b6c4a5a$var$renderGames","games1","main","filteredGames","filter","includes","element"],"version":3,"file":"index.d1dcaf00.js.map"}